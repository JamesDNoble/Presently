version: 2.1

references:
  workspace: &workspace
               ~/src

  persist_debug_workspace: &persist_debug_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - app/build/intermediates
        - app/build/outputs/apk
        - app/build/outputs/code-coverage
        - app/build/test-results

  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-29
    environment:
      TERM: dumb
      JAVA_OPTS: -Xmx2048m
      GRADLE_OPTS: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false

  android_dependencies: &android_dependencies
    run:
      name: Download Android Dependencies
      command: ./gradlew androidDependencies


  gradle_key: &gradle_key
                v3-jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle.kts" }}

  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_key

  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_key
      paths:
        - ~/.gradle
        - ~/.m2

jobs:

  build_debug:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *android_dependencies
      - *save_gradle_cache
      - run:
          name: Gradle build (debug)
          command: ./gradlew assembleDebug assembleAndroidTest --no-daemon --max-workers=2
      - *persist_debug_workspace
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: /apk/

  run_tests_get_coverage:
    working_directory: ~/src
    environment:
      JVM_OPTS: -Xmx3200m
    docker:
      - image: circleci/android:api-30 # gcloud is baked into this image
    steps:
      - checkout
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY | base64 -di > gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            gcloud auth activate-service-account presently-cicd-service-account@gratitude-journal-app.iam.gserviceaccount.com --key-file gcloud-service-key.json
            gsutil version -l
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Build
          command: ./gradlew -Pcoverage assembleDebug assembleDebugAndroidTest --stacktrace --no-daemon --max-workers=2
      - run:
          name: Test with Firebase Test Lab
          command: ./gradlew runFlank
      - run:
          name: Copy all coverage.ec files to their respective build output package
          command: ./coverage_mover.sh
      - run:
          name: Generate JaCoCo report
          command: ./gradlew jacocoFullReport
      - store_artifacts:
          path: build/fladle/
          destination: fladle/
      - store_artifacts:
          path: build/reports/
          destination: results/
      - store_test_results:
          path: build/

workflows:
  version: 2
  workflow:
    jobs:
      - build_debug
      - run_tests_get_coverage:
          filters:
            branches:
              # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
              ignore: /pull\/[0-9]+/